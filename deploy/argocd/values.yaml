configs:
  repositories:
     devops-db-management:
       url: https://github.com/ahmedpasic/devops-db-management
       name: devops-db-management
       type: git

extraObjects:
  - apiVersion: v1
    kind: Service
    metadata:
      name: argocd
    spec:
      type: NodePort
      selector:
        app.kubernetes.io/name: argocd-server
      ports:
        - protocol: TCP
          port: 8080
          targetPort: 8080
          nodePort: 30001

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: postgresql
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: 'https://github.com/ahmedpasic/devops-db-management'
        path: charts/postgresql
        targetRevision: HEAD
        helm:
          valueFiles:
            - ../../deploy/postgresql/values.yaml
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: pg
      syncPolicy:
        managedNamespaceMetadata:
          labels:
            name: pg
            app.kubernetes.io/name: pg
            app.kubernetes.io/instance: pg
            app.kubernetes.io/project: postgresql
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: grafana
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: 'https://github.com/ahmedpasic/devops-db-management'
        path: charts/grafana
        targetRevision: HEAD
        helm:
          valueFiles:
            - ../../deploy/grafana/values.yaml
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: grafana
      syncPolicy:
        managedNamespaceMetadata:
          labels:
            name: grafana
            app.kubernetes.io/name: grafana
            app.kubernetes.io/instance: grafana
            app.kubernetes.io/project: postgresql
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: pgwatch2
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: 'https://github.com/ahmedpasic/devops-db-management'
        path: charts/pgwatch2
        targetRevision: HEAD
        helm:
          valueFiles:
            - ../../deploy/pgwatch2/values.yaml
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: grafana
      syncPolicy:
        managedNamespaceMetadata:
          labels:
            name: pgwatch2
            app.kubernetes.io/name: pgwatch2
            app.kubernetes.io/instance: pgwatch2
            app.kubernetes.io/project: postgresql
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: grafana-dashboards
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: 'https://github.com/ahmedpasic/devops-db-management'
        path: charts/grafana-dashboards
        targetRevision: HEAD
        helm:
          valueFiles:
            - ../../deploy/grafana-dashboards/values.yaml
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: grafana
      syncPolicy:
        managedNamespaceMetadata:
          labels:
            name: grafana-dashboards
            app.kubernetes.io/name: grafana-dashboards
            app.kubernetes.io/instance: grafana-dashboards
            app.kubernetes.io/project: postgresql
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: pgo
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: 'https://github.com/ahmedpasic/devops-db-management'
        path: charts/pgo
        targetRevision: HEAD
        helm:
          valueFiles:
            - ../../deploy/pgo/values.yaml
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: pgo
      syncPolicy:
        managedNamespaceMetadata:
          labels:
            name: pgo
            app.kubernetes.io/name: pgo
            app.kubernetes.io/instance: pgo
            app.kubernetes.io/project: pgo
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: postgres-pgo
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: 'https://github.com/ahmedpasic/devops-db-management'
        path: charts/postgres-pgo
        targetRevision: HEAD
        helm:
          valueFiles:
            - ../../deploy/postgres-pgo/values.yaml
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: pgo
      syncPolicy:
        managedNamespaceMetadata:
          labels:
            name: postgres-pgo
            app.kubernetes.io/name: postgres-pgo
            app.kubernetes.io/instance: postgres-pgo
            app.kubernetes.io/project: pgo
        syncOptions:
          - CreateNamespace=true

  - apiVersion: argoproj.io/v1alpha1
    kind: Application
    metadata:
      name: crunchy-monitoring
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: 'https://github.com/ahmedpasic/devops-db-management'
        path: charts/crunchy-monitoring
        targetRevision: HEAD
        helm:
          valueFiles:
            - ../../deploy/crunchy-monitoring/values.yaml
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: pgo
      syncPolicy:
        managedNamespaceMetadata:
          labels:
            name: crunchy-monitoring
            app.kubernetes.io/name: crunchy-monitoring
            app.kubernetes.io/instance: crunchy-monitoring
            app.kubernetes.io/project: pgo
        syncOptions:
          - CreateNamespace=true